@page "/fetchdata"

@using Blazor.Data
@using Microsoft.Azure.Cosmos
@inject CosmosClient cosmosClient

<h1>Fetch Data</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<WeatherForecast> forecasts = null;

    protected override async Task OnInitializedAsync()
    {
        forecasts = new List<WeatherForecast>();
        // Assumes container already exists
        Container container = cosmosClient.GetContainer("mydb", "mycontainer");

        FeedIterator<WeatherForecast> iterator = container.GetItemQueryIterator<WeatherForecast>();
        while (iterator.HasMoreResults)
        {
            FeedResponse<WeatherForecast> response = await iterator.ReadNextAsync();
            forecasts.AddRange(response.Resource);
        }
    }
}
